name: Go

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
        working-directory: ./api

      - name: docker
        run: docker-compose -f docker-compose.e2e.yml up -d

      - name: Build
        run: go build -v .
        working-directory: ./api

      - uses: actions/setup-node@v2.1.1
        with:
          node-version: '12'
          check-latest: true

      - name: Cache node_modules
        uses: actions/cache@preview
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-projectname-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: ${{ runner.os }}-projectname-

      - name: frontend install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
        working-directory: ./frontend

      - name: frontend build
        run: yarn build
        working-directory: ./frontend

      - name: init db
        run: mysql -h 127.0.0.1 -uroot -proot -P 3306 gin_test < ./docker/mysql_helper/init.sql

      - name: Test
        run: go test -v ./...
        working-directory: ./api
        env:
          DB_NAME: gin_test
          ENV: test
